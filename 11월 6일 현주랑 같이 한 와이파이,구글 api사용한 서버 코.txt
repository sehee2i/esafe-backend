<<11월 6일 현주랑 같이 한 와이파이,구글 api사용한 서버 코드>>
<<와이파이,gps>>
import dotenv from 'dotenv'; 
dotenv.config();

import express from 'express';
import fetch from 'node-fetch';  // ESM 방식으로 fetch import

const app = express();
const port = 3000;

let latestLocation = { latitude: 37.5665, longitude: 126.978 }; // 기본 위치 (서울)
let latestWifiData = [ // Wi-Fi 데이터 배열, 예시 데이터 포함
    {
        "macAddress": "60-DD-8E-B4-A7-08",
        "signalStrength": -65,
        "signalToNoiseRatio": 40
    }
]; 

app.use(express.json()); // JSON 데이터 처리 미들웨어

// ESP8266에서 위치 데이터를 수신하는 API
app.post('/update-location', (req, res) => {
    const { location } = req.body;
    if (location && location.lat && location.lng) {
        latestLocation = { latitude: location.lat, longitude: location.lng };
        console.log('수신된 위치:', latestLocation);
        res.json({ status: '위치 수신 완료' });
    } else {
        res.status(400).json({ error: '잘못된 위치 데이터' });
    }
});

// /geolocation 경로를 처리하는 API
app.post('/api/geolocation', async (req, res) => {
    const { location, wifiAccessPoints } = req.body;

    // location과 wifiAccessPoints가 올바르게 전달되었는지 확인
    if (location && location.lat && location.lng && Array.isArray(wifiAccessPoints)) {
        latestLocation = { latitude: location.lat, longitude: location.lng };
        latestWifiData = wifiAccessPoints;

        console.log('수신된 위치:', latestLocation);
        console.log('수신된 Wi-Fi 데이터:', latestWifiData);

        try {
            // Google Geolocation API 호출
            const response = await fetch('https://www.googleapis.com/geolocation/v1/geolocate?key=' + process.env.GOOGLE_API_KEY, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    wifiAccessPoints: wifiAccessPoints
                })
            });

            const data = await response.json();

            // 위치 추정 결과 처리
            if (data.location) {
                const location = data.location;  // { lat, lng }
                console.log('Google Geolocation API에서 받은 위치:', location);
                res.json({
                    status: '위치 및 Wi-Fi 데이터 수신 완료',
                    latestLocation: location,
                    latestWifiData
                });
            } else {
                res.status(400).json({ error: 'Google Geolocation API에서 위치를 추정할 수 없습니다.' });
            }
        } catch (error) {
            console.error('Geolocation API 요청 중 오류 발생:', error);
            res.status(500).json({ error: 'Geolocation API 요청 중 오류 발생' });
        }

    } else {
        console.log('요청 데이터가 올바르지 않습니다:', req.body);
        res.status(400).json({ error: '잘못된 위치 또는 Wi-Fi 데이터' });
    }
});

// 클라이언트에서 위치 데이터를 요청하는 API
app.get('/get-gps-data', (req, res) => {
    res.json(latestLocation); // 최신 위치 데이터 반환
});

// 클라이언트에서 Wi-Fi 데이터를 요청하는 API
app.get('/get-wifi-data', (req, res) => {
    res.json(latestWifiData); // 최신 Wi-Fi 데이터 반환
});

// 정적 파일 서빙 (HTML 파일)
app.use(express.static('public'));

app.listen(port, () => {
    console.log(`서버가 http://0.0.0.0:${port}에서 실행 중입니다.`);
});
